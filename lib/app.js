// Generated by CoffeeScript 1.6.3

/*
  * Module dependencies.
 */

(function() {
  var RecipeSearch, app, async, credentials, express, http, mongoURI, mongoose, path, request, routes;

  console.log("fire app.js");

  express = require('express');

  routes = require('./routes');

  http = require('http');

  path = require('path');

  mongoose = require('mongoose');

  request = require('request');

  async = require('async');

  app = express();

  app.set('port', process.env.PORT || 3000);

  app.set('views', __dirname + '/../views');

  app.set('view engine', 'jade');

  app.use(express.favicon());

  app.use(express.logger('dev'));

  app.use(express.bodyParser());

  app.use(express.methodOverride());

  app.use(app.router);

  app.use(express["static"](path.join(__dirname, '/../public')));

  if ('development' === app.get('env')) {
    app.use(express.errorHandler());
  }

  credentials = {
    yummlyAppId: '_app_id=48b32423',
    yummlyAppKey: "&_app_key=f801fe2eacf40c98299940e2824de106"
  };

  mongoURI = process.env.MONGOHQ_URL || 'mongodb://localhost/veganizzmapp';

  mongoose.connect(mongoURI);

  RecipeSearch = mongoose.model('RecipeSearch', {
    q: String,
    allowedCuisine: String,
    allowedCourse: String,
    allowedAllergy: String,
    allowedDiet: String
  });

  app.get('/', routes.index);

  app.post('/submitrecipe', function(req, res) {
    var queryArray, queryYummlyrecipes, recipeSearch, requestYummlyUrl, submittedInfo, tasks, toSend, urlExtras;
    submittedInfo = req.body;
    console.log("submittedInfo", submittedInfo);
    recipeSearch = new RecipeSearch(submittedInfo);
    recipeSearch.save(function(err, data) {
      console.log("sent to database:", data);
    });
    console.log("HEYYEYEYEYYEYE", submittedInfo);
    queryArray = {
      recipeQuery: "&q=" + submittedInfo.q,
      checkCourse: "&allowedCourse[]=" + submittedInfo.allowedCourse,
      checkAllergies: "&allowedAllergy[]=" + submittedInfo.allowedAllergy,
      checkDiet: "&allowedDiet[]=" + submittedInfo.allowedDiet,
      checkCuisine: "&allowedCuisine[]=" + submittedInfo.allowedCuisine
    };
    urlExtras = [];
    if (queryArray.recipeQuery !== false) {
      urlExtras.push(queryArray.recipeQuery);
    }
    if (queryArray.checkCourse !== false) {
      urlExtras.push(queryArray.checkCourse);
    }
    if (queryArray.checkAllergies !== false) {
      urlExtras.push(queryArray.checkAllergies);
    }
    if (queryArray.checkDiet !== false) {
      urlExtras.push(queryArray.checkDiet);
    }
    if (queryArray.checkCuisine !== false) {
      urlExtras.push(queryArray.checkCuisine);
    }
    console.log('urlExtras', urlExtras);
    requestYummlyUrl = "http://api.yummly.com/v1/api/recipes?" + credentials.yummlyAppId + credentials.yummlyAppKey + urlExtras;
    console.log(requestYummlyUrl);
    queryYummlyrecipes = function(callback) {
      var yummlyObj;
      request(requestYummlyUrl, function(error, response, body) {});
      yummlyObj = JSON.parse(body);
      return callback(null, yummlyObj);
    };
    toSend = {};
    tasks = [
      function(cb) {
        return queryYummlyrecipes(function(err, data) {
          toSend.totalMatchCount = data['totalMatchCount'];
          toSend.criteria = data['criteria'];
          toSend.matches = data['matches'];
          return cb();
        });
      }
    ];
    return async.series(tasks, function() {
      return res.send(toSend);
    });
  });

  http.createServer(app).listen(app.get('port'), function() {
    console.log('Express server listening on port ' + app.get('port'));
  });

}).call(this);
